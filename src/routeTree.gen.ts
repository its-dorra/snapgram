/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedPostsImport } from './routes/_authenticated/posts'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AuthenticatedSavedIndexImport } from './routes/_authenticated/saved/index'
import { Route as AuthenticatedExploreIndexImport } from './routes/_authenticated/explore/index'
import { Route as AuthenticatedCreatePostIndexImport } from './routes/_authenticated/create-post/index'
import { Route as AuthenticatedAllUsersIndexImport } from './routes/_authenticated/all-users/index'
import { Route as AuthenticatedUserIdIndexImport } from './routes/_authenticated/$userId/index'
import { Route as AuthenticatedPostsPostIdImport } from './routes/_authenticated/posts/$postId'
import { Route as AuthenticatedUserIdEditImport } from './routes/_authenticated/$userId/edit'
import { Route as AuthenticatedPostsPostIdEditImport } from './routes/_authenticated/posts/$postId.edit'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPostsRoute = AuthenticatedPostsImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedSavedIndexRoute = AuthenticatedSavedIndexImport.update({
  id: '/saved/',
  path: '/saved/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedExploreIndexRoute = AuthenticatedExploreIndexImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedCreatePostIndexRoute =
  AuthenticatedCreatePostIndexImport.update({
    id: '/create-post/',
    path: '/create-post/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAllUsersIndexRoute = AuthenticatedAllUsersIndexImport.update(
  {
    id: '/all-users/',
    path: '/all-users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedUserIdIndexRoute = AuthenticatedUserIdIndexImport.update({
  id: '/$userId/',
  path: '/$userId/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPostsPostIdRoute = AuthenticatedPostsPostIdImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => AuthenticatedPostsRoute,
} as any)

const AuthenticatedUserIdEditRoute = AuthenticatedUserIdEditImport.update({
  id: '/$userId/edit',
  path: '/$userId/edit',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPostsPostIdEditRoute =
  AuthenticatedPostsPostIdEditImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => AuthenticatedPostsPostIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/posts': {
      id: '/_authenticated/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof AuthenticatedPostsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/$userId/edit': {
      id: '/_authenticated/$userId/edit'
      path: '/$userId/edit'
      fullPath: '/$userId/edit'
      preLoaderRoute: typeof AuthenticatedUserIdEditImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/posts/$postId': {
      id: '/_authenticated/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof AuthenticatedPostsPostIdImport
      parentRoute: typeof AuthenticatedPostsImport
    }
    '/_authenticated/$userId/': {
      id: '/_authenticated/$userId/'
      path: '/$userId'
      fullPath: '/$userId'
      preLoaderRoute: typeof AuthenticatedUserIdIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/all-users/': {
      id: '/_authenticated/all-users/'
      path: '/all-users'
      fullPath: '/all-users'
      preLoaderRoute: typeof AuthenticatedAllUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/create-post/': {
      id: '/_authenticated/create-post/'
      path: '/create-post'
      fullPath: '/create-post'
      preLoaderRoute: typeof AuthenticatedCreatePostIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/explore/': {
      id: '/_authenticated/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AuthenticatedExploreIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/saved/': {
      id: '/_authenticated/saved/'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof AuthenticatedSavedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/posts/$postId/edit': {
      id: '/_authenticated/posts/$postId/edit'
      path: '/edit'
      fullPath: '/posts/$postId/edit'
      preLoaderRoute: typeof AuthenticatedPostsPostIdEditImport
      parentRoute: typeof AuthenticatedPostsPostIdImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedPostsPostIdRouteChildren {
  AuthenticatedPostsPostIdEditRoute: typeof AuthenticatedPostsPostIdEditRoute
}

const AuthenticatedPostsPostIdRouteChildren: AuthenticatedPostsPostIdRouteChildren =
  {
    AuthenticatedPostsPostIdEditRoute: AuthenticatedPostsPostIdEditRoute,
  }

const AuthenticatedPostsPostIdRouteWithChildren =
  AuthenticatedPostsPostIdRoute._addFileChildren(
    AuthenticatedPostsPostIdRouteChildren,
  )

interface AuthenticatedPostsRouteChildren {
  AuthenticatedPostsPostIdRoute: typeof AuthenticatedPostsPostIdRouteWithChildren
}

const AuthenticatedPostsRouteChildren: AuthenticatedPostsRouteChildren = {
  AuthenticatedPostsPostIdRoute: AuthenticatedPostsPostIdRouteWithChildren,
}

const AuthenticatedPostsRouteWithChildren =
  AuthenticatedPostsRoute._addFileChildren(AuthenticatedPostsRouteChildren)

interface AuthenticatedRouteRouteChildren {
  AuthenticatedPostsRoute: typeof AuthenticatedPostsRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedUserIdEditRoute: typeof AuthenticatedUserIdEditRoute
  AuthenticatedUserIdIndexRoute: typeof AuthenticatedUserIdIndexRoute
  AuthenticatedAllUsersIndexRoute: typeof AuthenticatedAllUsersIndexRoute
  AuthenticatedCreatePostIndexRoute: typeof AuthenticatedCreatePostIndexRoute
  AuthenticatedExploreIndexRoute: typeof AuthenticatedExploreIndexRoute
  AuthenticatedSavedIndexRoute: typeof AuthenticatedSavedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedPostsRoute: AuthenticatedPostsRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedUserIdEditRoute: AuthenticatedUserIdEditRoute,
  AuthenticatedUserIdIndexRoute: AuthenticatedUserIdIndexRoute,
  AuthenticatedAllUsersIndexRoute: AuthenticatedAllUsersIndexRoute,
  AuthenticatedCreatePostIndexRoute: AuthenticatedCreatePostIndexRoute,
  AuthenticatedExploreIndexRoute: AuthenticatedExploreIndexRoute,
  AuthenticatedSavedIndexRoute: AuthenticatedSavedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/posts': typeof AuthenticatedPostsRouteWithChildren
  '/$userId/edit': typeof AuthenticatedUserIdEditRoute
  '/posts/$postId': typeof AuthenticatedPostsPostIdRouteWithChildren
  '/$userId': typeof AuthenticatedUserIdIndexRoute
  '/all-users': typeof AuthenticatedAllUsersIndexRoute
  '/create-post': typeof AuthenticatedCreatePostIndexRoute
  '/explore': typeof AuthenticatedExploreIndexRoute
  '/saved': typeof AuthenticatedSavedIndexRoute
  '/posts/$postId/edit': typeof AuthenticatedPostsPostIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/posts': typeof AuthenticatedPostsRouteWithChildren
  '/$userId/edit': typeof AuthenticatedUserIdEditRoute
  '/posts/$postId': typeof AuthenticatedPostsPostIdRouteWithChildren
  '/$userId': typeof AuthenticatedUserIdIndexRoute
  '/all-users': typeof AuthenticatedAllUsersIndexRoute
  '/create-post': typeof AuthenticatedCreatePostIndexRoute
  '/explore': typeof AuthenticatedExploreIndexRoute
  '/saved': typeof AuthenticatedSavedIndexRoute
  '/posts/$postId/edit': typeof AuthenticatedPostsPostIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/_authenticated/posts': typeof AuthenticatedPostsRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/$userId/edit': typeof AuthenticatedUserIdEditRoute
  '/_authenticated/posts/$postId': typeof AuthenticatedPostsPostIdRouteWithChildren
  '/_authenticated/$userId/': typeof AuthenticatedUserIdIndexRoute
  '/_authenticated/all-users/': typeof AuthenticatedAllUsersIndexRoute
  '/_authenticated/create-post/': typeof AuthenticatedCreatePostIndexRoute
  '/_authenticated/explore/': typeof AuthenticatedExploreIndexRoute
  '/_authenticated/saved/': typeof AuthenticatedSavedIndexRoute
  '/_authenticated/posts/$postId/edit': typeof AuthenticatedPostsPostIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/signup'
    | '/posts'
    | '/$userId/edit'
    | '/posts/$postId'
    | '/$userId'
    | '/all-users'
    | '/create-post'
    | '/explore'
    | '/saved'
    | '/posts/$postId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/posts'
    | '/$userId/edit'
    | '/posts/$postId'
    | '/$userId'
    | '/all-users'
    | '/create-post'
    | '/explore'
    | '/saved'
    | '/posts/$postId/edit'
  id:
    | '__root__'
    | '/(auth)'
    | '/_authenticated'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/_authenticated/posts'
    | '/_authenticated/'
    | '/_authenticated/$userId/edit'
    | '/_authenticated/posts/$postId'
    | '/_authenticated/$userId/'
    | '/_authenticated/all-users/'
    | '/_authenticated/create-post/'
    | '/_authenticated/explore/'
    | '/_authenticated/saved/'
    | '/_authenticated/posts/$postId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_authenticated"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/login",
        "/(auth)/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/posts",
        "/_authenticated/",
        "/_authenticated/$userId/edit",
        "/_authenticated/$userId/",
        "/_authenticated/all-users/",
        "/_authenticated/create-post/",
        "/_authenticated/explore/",
        "/_authenticated/saved/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/posts": {
      "filePath": "_authenticated/posts.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/posts/$postId"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/$userId/edit": {
      "filePath": "_authenticated/$userId/edit.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/posts/$postId": {
      "filePath": "_authenticated/posts/$postId.tsx",
      "parent": "/_authenticated/posts",
      "children": [
        "/_authenticated/posts/$postId/edit"
      ]
    },
    "/_authenticated/$userId/": {
      "filePath": "_authenticated/$userId/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all-users/": {
      "filePath": "_authenticated/all-users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/create-post/": {
      "filePath": "_authenticated/create-post/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/explore/": {
      "filePath": "_authenticated/explore/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/saved/": {
      "filePath": "_authenticated/saved/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/posts/$postId/edit": {
      "filePath": "_authenticated/posts/$postId.edit.tsx",
      "parent": "/_authenticated/posts/$postId"
    }
  }
}
ROUTE_MANIFEST_END */
